<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.White</title>
  
  <subtitle>粉丝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aiqiong.github.io/"/>
  <updated>2020-08-01T13:11:50.641Z</updated>
  <id>http://aiqiong.github.io/</id>
  
  <author>
    <name>Aiqiong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>testimage</title>
    <link href="http://aiqiong.github.io/posts/9d615e8b/"/>
    <id>http://aiqiong.github.io/posts/9d615e8b/</id>
    <published>2020-08-01T13:11:50.000Z</published>
    <updated>2020-08-01T13:11:50.641Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据库连接池</title>
    <link href="http://aiqiong.github.io/posts/6331d382/"/>
    <id>http://aiqiong.github.io/posts/6331d382/</id>
    <published>2020-08-01T07:01:35.000Z</published>
    <updated>2020-08-01T12:09:13.527Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1>一、连接池</h1><h2 id="1、连接池介绍">1、连接池介绍</h2><h3 id="没有连接池现状">没有连接池现状</h3><p>jdbc的缺点：</p><p>1、操作数据库都需要创建连接，操作完成还需要关闭连接</p><p>2、创建连接和关闭连接需要可能比执行sql需要的时间都长</p><p>3、一个网站需要高频繁的访问数据库，如果短时间频繁的访问数据库服务器，就容易造成服务器的宕机，即死机。</p><h3 id="连接池解决现状问题的原理">连接池解决现状问题的原理</h3><p>由jdbc的缺点，我们可以很容易想到，如果能够有一个特定的地方存放我们创建的连接，这样我们就不用每次不停的创建和销毁了，仅需要创建一次即可。当我们需要使用的时候，直接从里面获取即可。用完之后放回到原来的地方，而不用销毁。</p><p>优化之后的结构如下图：</p><p><strong><img src= "/img/loading.gif" data-src="/posts/6331d382/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%8E%9F%E7%90%86.bmp" class title="This is an test image"></strong></p><h3 id="连接池好处">连接池好处</h3><p>连接池中保存了一些数据库连接，这些连接是可以重复使用的。节省数据库的资源消耗。</p><h3 id="常用连接池的介绍">常用连接池的介绍</h3><p><code>javax.sql.DataSource</code>表示数据库<strong>连接池</strong>，DataSource本身只是Sun公司提供的一个接口,没有具体的实现，它的实现由连接池的数据库厂商去实现。我们只需要学习这个工具如何使用即可。</p><p>该接口如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DataSource</span> </span>&#123;</span><br><span class="line"><span class="function">Connection <span class="title">getConnection</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常用的连接池实现组件有以下这些：</p><ol><li>阿里巴巴-德鲁伊Druid连接池：Druid是阿里巴巴开源平台上的一个项目，整个项目由数据库连接池、插件框架和SQL解析器组成。该项目主要是为了扩展JDBC的一些限制，可以让程序员实现一些特殊的需求。</li><li>C3P0是一个开源的JDBC连接池，支持JDBC3规范和JDBC2的标准扩展。目前使用它的开源项目有Hibernate，Spring等。C3P0有自动回收空闲连接功能。</li><li>DBCP(DataBase Connection Pool)数据库连接池，是Apache上的一个Java连接池项目。dbcp没有自动回收空闲连接的功能。</li></ol><h2 id="2、C3P0连接池">2、C3P0连接池</h2><h3 id="C3P0连接池简介">C3P0连接池简介</h3><p>使用C3P0数据库连接池之前，首先需要在资料里找到如下的jar包，加载到项目中。</p><p>C3P0的核心jar包：<code>c3p0-0.9.1.2.jar</code></p><p><strong><img src= "/img/loading.gif" data-src="/posts/6331d382/1550387401441.png" class title="This is an test image"></strong></p><p>对上述核心包进行Add as Library…</p><h3 id="C3P0常用的配置参数解释">C3P0常用的配置参数解释</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>driverClass</td><td>数据库驱动类。例如：com.mysql.jdbc.Driver</td></tr><tr><td>jdbcUrl</td><td>连接数据库的url地址。例如：jdbc:mysql://localhost:3306/day05_db</td></tr><tr><td>user</td><td>连接数据库的用户名。例如：root</td></tr><tr><td>password</td><td>连接数据库的密码。例如：1234</td></tr><tr><td>initialPoolSize</td><td>刚创建好连接池的时候连接数量</td></tr><tr><td>maxPoolSize</td><td>连接池中最多可以放多少个连接</td></tr></tbody></table><h3 id="C3P0配置文档方式获取数据库连接">C3P0配置文档方式获取数据库连接</h3><p>​这么多参数需要配置，那么使用配置文件方式是最方便的。</p><p>​首先找到c3p0的主页index.html,即c3p0的API帮助文档。</p><p>​<img src= "/img/loading.gif" data-src="/posts/6331d382/API.png" class title="This is an test image"></p><p>​打开该页面，如下图：</p><p>​<img src= "/img/loading.gif" data-src="/posts/6331d382/API_Configuration.png" class title="This is an test image"></p><p>​这里我们采用xml方式配置：</p><p>​<img src= "/img/loading.gif" data-src="/posts/6331d382/API_XML.png" class title="This is an test image"></p><p>​点击进去，如下模板：</p><p>​<img src= "/img/loading.gif" data-src="/posts/6331d382/API_XML_Module.png" class title="This is an test image"></p><p>注意：</p><p>​1、这些配置信息存放的配置文件必须叫：c3p0-config.xml</p><p>​<img src= "/img/loading.gif" data-src="/posts/6331d382/API_XML_NAME.png" class title="This is an test image"></p><p>​2、配置文件方在javase项目下的src目录下，也就是相当于web项目中的WEB-INF/classes 中</p><p>​<img src= "/img/loading.gif" data-src="/posts/6331d382/API_XML_LOCATION.png" class title="This is an test image"></p><p>​<strong>这样C3P0数据库连接池自己就会去找这个文件，并且读取这个文件中的信息。</strong></p><p>​将配置文件c3p0-config.xml的内容改成如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/day05_db<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>1234<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">default-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;intergalactoApp&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="API介绍">API介绍</h3><p><code>com.mchange.v2.c3p0.ComboPooledDataSource</code>类表示C3P0的连接池对象，常用2种创建连接池的方式：</p><p>1、无参构造，使用默认配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ComboPooledDataSource</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 无参构造使用默认配置（使用xml中<span class="keyword">default</span>-config标签中对应的参数）</span></span><br></pre></td></tr></table></figure><p>2、有参构造，使用命名配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ComboPooledDataSource</span><span class="params">(String configName)</span></span></span><br><span class="line"><span class="function">  有参构造使用命名配置（configName:xml中配置的名称，使用xml中named-config标签对应的参）</span></span><br></pre></td></tr></table></figure><p>3、从连接池中获取一个连接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span></span><br><span class="line"><span class="function">  从连接池中获取一个连接</span></span><br></pre></td></tr></table></figure><h4 id="案例分析：">案例分析：</h4><p>​需求：查询表中所有数据并输出到控制台。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> <span class="keyword">throws</span> PropertyVetoException </span>&#123;</span><br><span class="line"><span class="comment">// 需求：遍历emp的用户。</span></span><br><span class="line"><span class="comment">// 首先创建c3p0的数据库连接池</span></span><br><span class="line">ComboPooledDataSource cpds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line"></span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 从连接池中获取连接</span></span><br><span class="line">conn = cpds.getConnection();</span><br><span class="line"><span class="comment">// 获得发送sql的对象</span></span><br><span class="line">String sql = <span class="string">&quot;select * from emp&quot;</span>;</span><br><span class="line">stmt = conn.prepareStatement(sql);</span><br><span class="line"><span class="comment">// 执行sql 获得结果</span></span><br><span class="line">rs = stmt.executeQuery();</span><br><span class="line"><span class="comment">// 处理结果</span></span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line"><span class="keyword">int</span> id = rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">String name = rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">String city = rs.getString(<span class="string">&quot;city&quot;</span>);</span><br><span class="line">     System.out.println(<span class="string">&quot;C3P0::::: &quot;</span> + id + <span class="string">&quot;&gt;&gt;&gt;&quot;</span> + name + <span class="string">&quot;&gt;&gt;&gt;&quot;</span> + city);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">// 释放资源: 关闭stmt 和 rs</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(rs != <span class="keyword">null</span>)&#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(stmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例效果">案例效果</h4><img src= "/img/loading.gif" data-src="/posts/6331d382/result_c3p0.png" class title="This is an test image"><p>说明：</p><p>1）这里发现并没有设置参数，就可以和数据库建立连接了。说明 再创建数据库池对象的时候，数据库连接池就会去src下去找c3p0-config.xml,并进行读取该配置文件信息，从而连接数据库。</p><p>2）上述打印红色的内容是在创建c3p0核心类ComboPooledDataSource对象和调用conn = cpds.getConnection();方法时打印的。</p><p>3）关于打印主要信息解释</p><p>​driverClass -&gt; com.mysql.jdbc.Driver：驱动类</p><p>​nitialPoolSize -&gt; 3：连接池初始化时的接数</p><p>​maxPoolSize -&gt; 15：连接池可以存放的最大连接数</p><p>​minPoolSize -&gt; 3：连接池可以存放的最小连接数</p><h4 id="使用命名配置操作指定的数据库">使用命名配置操作指定的数据库</h4><p>​需求：现在想读取day06_db数据库下面的user表中的信息。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/day_07db<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">default-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;day06&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/day_06db<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码演示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">()</span> <span class="keyword">throws</span> PropertyVetoException </span>&#123;</span><br><span class="line"><span class="comment">// 需求：遍历emp的用户。</span></span><br><span class="line"><span class="comment">// 首先创建c3p0的数据库连接池构造方法ComboPooledDataSource(configName) configName表示新增的名字</span></span><br><span class="line">ComboPooledDataSource cpds = <span class="keyword">new</span> ComboPooledDataSource(“day06”);</span><br><span class="line"></span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 从连接池中获取连接</span></span><br><span class="line">conn = cpds.getConnection();</span><br><span class="line"><span class="comment">// 获得发送sql的对象</span></span><br><span class="line">String sql = <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line">stmt = conn.prepareStatement(sql);</span><br><span class="line"><span class="comment">// 执行sql 获得结果</span></span><br><span class="line">rs = stmt.executeQuery();</span><br><span class="line"><span class="comment">// 处理结果</span></span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line"><span class="keyword">int</span> id = rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">String username = rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">String password= rs.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;C3P0::::: &quot;</span> + id + <span class="string">&quot;&gt;&gt;&gt;&quot;</span> + username + <span class="string">&quot;&gt;&gt;&gt;&quot;</span> + password);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">// 释放资源: 关闭stmt 和 rs</span></span><br><span class="line">JDBCUtils.release(conn, stmt, rs);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何接环不同的数据源呢？根据实例化对象指定不同的参数</p><img src= "/img/loading.gif" data-src="/posts/6331d382/10.bmp" class title="This is an test image"><p>只需要单独修改配置文件，不用修改代码</p><h2 id="3、Druid连接池">3、Druid连接池</h2><h3 id="DRUID简介">DRUID简介</h3><p>​它是阿里巴巴开发的号称为监控而生的数据库连接池（可以监控访问数据库的性能），是目前最好的连接池。在功能、性能、扩展性方面，都超过了其他数据库连接池。Druid已经在阿里巴巴部署了超过600个应用，经过一年多生产环境大规模部署的严苛考验。如：一年一度的双十一活动，每年的春运的抢火车票。</p><p>Druid的下载地址：</p><p>[<a href="https://github.com/alibaba/druid">https://github.com/alibaba/druid</a>]:</p><p>Druid连接池使用的jar包：druid-1.0.9.jar</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1550388331344.png" class title="This is an test image"><h3 id="Druid常用的配置参数">Druid常用的配置参数</h3><table><thead><tr><th>url</th><th>数据库连接字符串jdbc:mysql://localhost:3306/数据库名</th></tr></thead><tbody><tr><td>username</td><td>数据库的用户名</td></tr><tr><td>password</td><td>数据库的密码</td></tr><tr><td>driverClassName</td><td>驱动类名。根据url自动识别，这一项可配可不配，如果不配置druid会根据url自动识别数据库的类型，然后选择相应的数据库驱动名</td></tr><tr><td>initialSize</td><td>初始化时建立的物理连接的个数。初始化发生在显式调用init方法，或者第一次获取连接对象时</td></tr><tr><td>maxSize</td><td>连接池中最大的连接数</td></tr><tr><td>maxWait</td><td>获取连接时最长等待时间，单位是毫秒</td></tr></tbody></table><h3 id="Druid连接池基本使用">Druid连接池基本使用</h3><h4 id="API介绍-2">API介绍</h4><p>核心类：<strong>DruidDataSourceFactory</strong></p><p>获取数据的 方法：使用com.alibaba.druid.pool.DruidDataSourceFactory类中的静态方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">createDataSource</span><span class="params">(Properties properties)</span></span></span><br><span class="line"><span class="function">创建一个连接池，连接池的参数使用properties中的数据</span></span><br></pre></td></tr></table></figure><p>配置信息在properties属性对象中。</p><p>因为Druid连接池在创建的时候需要一个Properties对象来设置参数，所以我们使用properties文件来保存对应的参数。</p><p>Druid连接池的配置文件名称随意，放到src目录或者项目根目录下加载</p><p>druid.properties文件内容：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/day07_db</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure><h1>二、框架</h1><h2 id="什么是框架">什么是框架</h2><p>程序开发中的框架往往是对常见功能的封装，通常与具体业务无关，也可以认为是软件的程序框架理解为基础或者机械标准件（例如螺丝螺母的机械部件）</p><p>假如你要造一辆马车，在没有框架的情况下，你需要自己去伐木，去把木头做成木板，木棍，然后组成轮子，门，等部件，然后组装起来。但如果你用了框架，就相当于你有现成的轮子，门等部件，你只需要组装一下就可以了。</p><p>一个框架是一组可复用的设计构件。</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1557575891993.png" class title="This is an test image"><p>框架(Framework)是整个或者部分系统的可重用设计，是JavaEE底层技术的封装。</p><p>框架是可以被开发者定制的应用骨架。</p><p>框架是一个半成品，软件是成品。我们在它的基础上开发出成品(软件)。</p><h2 id="框架解决的问题">框架解决的问题</h2><h3 id="解决了技术通用的问题">解决了技术通用的问题</h3><p>在JavaEE体系中，有着各种各样的技术。不同的软件企业，根据自身的业务需求选择不同的技术，容易造成应用依赖技术，增加了项目开发实现的复杂性和技术风险性。而框架技术就可以解决上述问题。</p><h3 id="提升了开发效率">提升了开发效率</h3><p>企业项目中使用框架，只需要专注实现业务需求。使用框架的方便性，提升了开发效率。</p><h3 id="提升了系统稳定性">提升了系统稳定性</h3><p>个成熟的框架，经过了在众多企业项目中的验证使用，稳定性有保障。</p><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200603205106584.png" class title="This is an test image"><h1>三、mybatis框架介绍</h1><h2 id="mybatis框架的介绍">mybatis框架的介绍</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mybatis是Apache软件基金会下的一个开源项目，前身是iBatis框架。<span class="number">2010</span>年这个项目由apache 软件基金会迁移到google code下，改名为mybatis。<span class="number">2013</span>年<span class="number">11</span>月又迁移到了github(GitHub 是一个面向开源及私有 软件项目的托管平台)。</span><br><span class="line">MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射(多表)。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。它对 jdbc 的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、创建 connection、创建 statement、手动设置参数、结果集检索等 jdbc 繁杂的过程代码。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。  </span><br></pre></td></tr></table></figure><h3 id="mybatis的优点">mybatis的优点</h3><p>1.简单易学：mybaits本身就是很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件 + 配置几个SQL映射文件即可</p><p>2.使用灵活：mybatis不会对应用程序或者数据库的现有设计强加任何印象。SQL语句写在XML里，便于统一管理和优化。</p><p>3.解除SQL与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易进行单元测试。SQL语句和代码的分离，提高了可维护性。</p><h3 id="mybatis的不足">mybatis的不足</h3><p>1.编写SQL语句时工作量很答，尤其是字段多、关联多表使，更是如此。</p><p>2.SQL语句依赖于数据库，导致数据库移植性差，不能更换数据库</p><p>3.框架还是比较简陋，功能尚有缺失。</p><h3 id="官方网站及框架包下载">官方网站及框架包下载</h3><p>官方网址：<a href="http://www.mybatis.org/mybatis-3/">http://www.mybatis.org/mybatis-3/</a></p><p>源码和包下载地址：<a href="https://github.com/mybatis/mybatis-3/releases">https://github.com/mybatis/mybatis-3/releases</a></p><img src= "/img/loading.gif" data-src="/posts/6331d382/1557582590735.png" class title="this is an image"><h3 id="mybatis框架整体架构">mybatis框架整体架构</h3><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200603214543750.png" class title="This is an image"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、配置文件</span><br><span class="line">全局配置文件（核心配置文件）：mybatis-config.xml，作用：配置数据源（配置数据库连接信息），引入映射文件</span><br><span class="line">映射文件：XxMapper.xml，作用：配置sql语句、参数、结果集封装类型等</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、SqlSessionFactory</span><br><span class="line">作用：获取SqlSession</span><br><span class="line">通过<span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream)来构建，inputStream：读取配置文件的IO流</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、SqlSession</span><br><span class="line">作用：执行CRUD操作</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、Executor</span><br><span class="line">执行器，SqlSession通过调用它来完成具体的CRUD</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、Mapped Statement</span><br><span class="line">在映射文件里面配置，包含<span class="number">3</span>部分内容：</span><br><span class="line">具体的sql，sql执行所需的参数类型，sql执行结果的封装类型</span><br><span class="line">参数类型和结果集封装类型包括<span class="number">3</span>种：</span><br><span class="line">HashMap，基本数据类型，pojo</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="MyBatis的ORM方式">MyBatis的ORM方式</h2><p>Object Relational Mapping 对象关系映射</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1566614801843.png" class title="This is an image"><h1>四、MyBatis框架入门开发</h1><h2 id="入门案例：环境的搭建和代码实现">入门案例：环境的搭建和代码实现</h2><p>需求：利用mybatis框架，从MySQL中查询所有的用户</p><p>步骤：可以完全按照mybatis官网入门步骤进行开发</p><p>​1.创建项目</p><p>​2.创建lib目录，复制以下包</p><p>​1.日志记录包：mybatis在执行过程中输出的一些信息，mybatis底层需要使用log4j日志框架</p><p>​log4j.jar</p><p>​2.mysql驱动</p><p>​3.mybatis框架的包</p><p>​3.创建实体类User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer id, String username, Date birthday, String sex, String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, birthday=&quot;</span> + birthday +</span><br><span class="line">                <span class="string">&quot;, sex=&#x27;&quot;</span> + sex + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​4.在src下面创建核心配置文件：mybatis-config.xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置文件中包含了对 MyBatis 系统的核心设置，包含获取数据库连接实例的数据源（DataSource）和决定事务作用域和控制方式的事务管理器（TransactionManager）。 XML 配置文件的详细内容后面再探讨，这里先给出一个简单的示例：</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis环境的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通常我们只需要配置一个就可以了， id是环境的名字 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器：由JDBC来管理--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源的配置：mybatis自带的连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/day07_db&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--加载映射文件,放到src下即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;userMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5.在src下创建映射文件userMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.mybatis.example.BlogMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        查询语句</span></span><br><span class="line"><span class="comment">        resultType：返回的实体类的类型，类全名</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAllUsers&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.sh.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>6.编写测试类的代码</p><p>​三大对象作用和生命周期</p><p>在mybatis中一个会话相当于一次访问数据库的过程，一个会话对象类似于一个Connection连接对象。</p><p>1.SqlSessionFactoryBuilder：这是一个临时对象，用完就不要了。通过这个工厂建造类来创建一个会话工厂。</p><p>2.SqlSessionFactory：从一个工厂类中得到一个会话对象，一个项目中只需创建一个会话工厂对象即可。通过会话工厂对象来创建会话对象。</p><p>3.SqlSession：每次访问数据库都需要创建一个会话对象，这个会话对象不能共享。访问完成以后会话需要关闭。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest01</span> </span>&#123;</span><br><span class="line">    <span class="comment">//从MySQL中查询所有的用户</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1.从xml文件中构建SqlSessionFactory</span></span><br><span class="line">        <span class="comment">//定义核心配置文件路径</span></span><br><span class="line">        String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        <span class="comment">//加载核心配置文件获取输入流</span></span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.从SqlSessionFactory中获取session</span></span><br><span class="line">        SqlSession session = sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.使用session操作数据库 CRUD</span></span><br><span class="line">        <span class="comment">//通过参数：org.mybatis.example.BlogMapper.findAllUsers找到映射文件userMapper.xml中的sql语句</span></span><br><span class="line">        List&lt;User&gt; userList = session.selectList(<span class="string">&quot;org.mybatis.example.BlogMapper.findAllUsers&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;user = &quot;</span> + user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭会话</span></span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><img src= "/img/loading.gif" data-src="/posts/6331d382/result_mybatis.png" class title="This is an image"><p>编写流程：Resources工具类直接可以读取src目录下配置文件，转成输入流。</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1557809924268.png" class title="This is an image"><p>我们通过运行结果发现mybatis框架发出警告，因为没有使用log4j日志。所以我们需要在src下再次创建一个日志配置文件：log4j.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 设置Logger输出级别和输出目的地 ###</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">debug, stdout</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 把日志信息输出到控制台 ###</span></span><br><span class="line"><span class="meta">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.stdout.Target</span>=<span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.SimpleLayout</span></span><br></pre></td></tr></table></figure><p>作用：用来设置日志记录的格式，因为mybaits需要使用到log4j来记录它的日志。日志记录程序运行过程中各种事件。</p><h4 id="项目结构">项目结构</h4><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200603231750424.png" class title="This is an image"><h2 id="入门案例：mybatis执行流程分析">入门案例：mybatis执行流程分析</h2><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200604063501686.png" class title="This is an image"><p>1.第一步：是从核心配置文件mybatis-config.xml中构建SqlSessionFactory对象，由于核心配置文件mybatis-config.xml中关联了映射文件UserMapper.xml,所以在SqlSessionFactory中也存在映射文件的内容</p><p>2.第二步：是从SqlSessionFactory中获取SqlSession会话对象，其实SqlSession会话对象底层封装的就是conn连接对象</p><p>3.第三步：是通过SqlSession会话对象调用查询方法selectList然后根据参数找到映射文件中中的sql语句并将数据封装到pojo的User对象中</p><h2 id="入门案例：核心配置文件mybatis-congif-xml">入门案例：核心配置文件mybatis-congif.xml</h2><p>在src目录下核心配置文件</p><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200604064352844.png" class title="This is an image"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis环境的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通常我们只需要配置一个就可以了， id是环境的名字 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器：由JDBC来管理--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源的配置：mybatis自带的连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/db4&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--加载映射文件,放到src下即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;userMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以在idea中定义模板，以后重用</p><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200603233026215.png" class title="This is an image"><h2 id="入门案例：常见错误">入门案例：常见错误</h2><ul><li>在映射文件userManager.xml中的resultType位置没有书写类的全名</li></ul><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200604070423320.png" class title="This is an image"><ul><li>在核心配置文件中没有引用映射文件</li></ul><h3 id="总结：">总结：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">【1】从xml文件中构建：___SqlSessionFactory____</span><br><span class="line">【2】从SqlSessionFactory中获取：____SqlSession_____</span><br><span class="line">【3】通过__SqlSession____执行___映射文件___文件中的sql语句</span><br></pre></td></tr></table></figure><h1>五、mybatis的dao层动态代理实现</h1><p>在上述入门案例中，我们使用了mybatis框架的SqlSession完成了对数据库的查询操作。但是，mybatis是持久层（dao层）的框架，在实际开发中，mybatis应该在持久层起作用。关于mybatis在持久层的使用。官方描述如下：</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1573549441338.png" class title="This is an image"><h2 id="【步骤】">【步骤】</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一步：新建接口 UserMapper；</span><br><span class="line">第二步：将接口和映射文件绑定；</span><br><span class="line">第三步：在映射文件中书写SQL语句；</span><br><span class="line">第四步：获取UserMapper的动态代理对象完成查询；</span><br></pre></td></tr></table></figure><h2 id="【实现】">【实现】</h2><p>【1】新键UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span></span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     查询所有的用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAllUsers</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【2】将接口和映射文件绑定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">映射文件的namespace值&#x3D;&#x3D;接口的全路径</span><br><span class="line">映射文件的sql语句的id值 &#x3D;&#x3D;接口中的方法名</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200604074041674.png" class title="This is an image"><p>【3】获取UserMapper接口的动态代理对象执行查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">//1.从xml文件中构建SqlSessionFactory</span></span><br><span class="line">    <span class="comment">//定义核心配置文件路径</span></span><br><span class="line">    String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">    <span class="comment">//加载核心配置文件获取输入流</span></span><br><span class="line">    InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">    SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.从SqlSessionFactory中获取session</span></span><br><span class="line">    SqlSession session = sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.使用session获取接口的动态代理对象</span></span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="comment">//4.使用接口对象调用接口中的方法</span></span><br><span class="line">    List&lt;User&gt; userList = mapper.findAllUsers();</span><br><span class="line">    <span class="comment">//5.遍历集合</span></span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关闭会话</span></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>六、mybatis核心设置</h1><p><strong>【mybatis全局配置介绍】</strong></p><p>​mybatis-config.xml，是MyBatis的全局配置文件，包含全局配置信息，如数据库连接参数、插件等。整个框架中只需要一个即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、mybatis全局配置文件是mybatis框架的核心配置，整个框架只需一个；</span><br><span class="line">2、mybatis全局配置文件中的配置顺序：注意如果配置多项，必须按照以下顺序进行配置</span><br><span class="line">properties：属性配置</span><br><span class="line">settings：设置</span><br><span class="line">typeAliases：类型别名设置</span><br><span class="line">typeHandlers：类型处理器</span><br><span class="line">enviroments：环境配置</span><br><span class="line">environment（环境变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">mappers：映射器</span><br></pre></td></tr></table></figure><h2 id="properties-属性">properties(属性)</h2><p>【作用】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、加载外部的java资源文件（properties文件）；</span><br><span class="line">2、通过子标签property设置属性；</span><br></pre></td></tr></table></figure><p>【需求】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用properties属性，配置数据库连接参数；</span><br></pre></td></tr></table></figure><p>【1】property标签设置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、通过properties的子标签设置属性；</span><br><span class="line">2、使用$&#123;key&#125;获取设置的属性值；</span><br></pre></td></tr></table></figure><p>【通过properties的子标签property设置属性】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一、properties（属性）</span></span><br><span class="line"><span class="comment">            【1】作用：定义参数或者加载外部的资源文件中的参数</span></span><br><span class="line"><span class="comment">            【2】用法：</span></span><br><span class="line"><span class="comment">            用法一：通过子标签 property 设置属性名和属性值；</span></span><br><span class="line"><span class="comment">            用法二：通过标签属性resource，加载外部的资源文件中参数；</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis环境的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通常我们只需要配置一个就可以了， id是环境的名字 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器：由JDBC来管理--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源的配置：mybatis自带的连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    这里的value=&quot;$&#123;driver&#125;&quot;  driver 是子标签property的name属性值</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/db4&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--加载映射文件,放到src下即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;userMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【2】加载外部properties</p><h5 id="第一步：新键资源文件">第一步：新键资源文件</h5><p>新建jdbc.properties文件，将连接参数抽取到配置文件中：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/day07_db</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><h5 id="第二步：引入资源文件">第二步：引入资源文件</h5><p>在mybatis-config.xml文件中加载jdbc.properties文件；<strong>通过properties的属性resource引入；</strong></p><img src= "/img/loading.gif" data-src="/posts/6331d382/1573114219207.png" class title="This is an image"><p><strong>【注意事项】</strong>：子标签和属性resource同时加载一个变量，先加载子标签，然后在加载resource关联的外部文件的值，那么子标签中的内容会被覆盖。此时子标签存在就没有意义了。</p><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200605102640305.png" class title="This is an image"><h2 id="settings设置">settings设置</h2><p>settings参数有很多，今天咱们先学习驼峰匹配-mapUnderscoreToCamelCase。翻译过来就是映射下划线到驼峰式命名。</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1564450693748.png" class title="This is an image"><h3 id="【作用】">【作用】</h3><img src= "/img/loading.gif" data-src="/posts/6331d382/image-20200605102640305.png" class title="This is an image"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开启驼峰匹配：完成经典的数据库命名到java属性的映射</span><br><span class="line">经典数据库命名：如果多个单词之间，通常使用下划线进行连接。</span><br><span class="line">java中命名：第二个单词首字母大写。</span><br><span class="line">驼峰匹配：相当于去掉数据库的数据中的名字的下划线，和java进行匹配  </span><br></pre></td></tr></table></figure><h3 id="【应用场景】">【应用场景】</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">从数据库中查到数据的字段名user_name和实体类属性名userName，不一致，导致查到的数据无法封装到实体类中。</span><br><span class="line">但是，实体类中的属性userName符合驼峰命名，数据库字段名user_name符合数据库经典字段命名。</span><br></pre></td></tr></table></figure><p>如果此时直接查询数据，那么用户名是null。</p><h4 id="【1】配置驼峰映射">【1】配置驼峰映射</h4><p>在mybatis-config.xml中做如下配置：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">settings设置：</span><br><span class="line"> mapUnderscoreToCamelCase ：驼峰自动映射配置 ,值是true表示开启驼峰自动映射。满足条件：数据库字段名  user_name   ,实体类属性名 userName</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    2、settings设置：</span></span><br><span class="line"><span class="comment"> mapUnderscoreToCamelCase ：驼峰自动映射配置 满足条件：数据库字段名  user_name   ,实体类属性名 userName</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="【2】解决字段名和属性名不一致的方法">【2】解决字段名和属性名不一致的方法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果数据库字段名和属性名不一致，或者是也不满足上面的命名规则。可以通过在SQL语句中为字段名取别名进行映射。</span><br></pre></td></tr></table></figure><h2 id="typeAliases-类型别名">typeAliases(类型别名)</h2><h3 id="【1】作用">【1】作用</h3><p>类型别名是给类的全限定名称(包名.类名) 取一个短名称。存在的意义仅在于用来减少类完全限定名的冗余。例如：</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1573114789567.png" class title="This is an image"><p>这些全限定类名可通过设置类型别名–短名称代替。类型别名的设置有以下几种方式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方式一：使用typeAliases标签的子标签typeAlias手动设置类型别名；</span><br><span class="line">方式二：使用typeAliases标签的子标签package包扫描映射别名；</span><br></pre></td></tr></table></figure><h3 id="【2】应用">【2】应用</h3><h4 id="【方式一】typeAlias">【方式一】typeAlias</h4><p>第一步：在mybatis-config.xml核心配置文件中通过typeAlias设置User的全限定类名为User；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        三、typeAliases（类型别名）</span></span><br><span class="line"><span class="comment">            【1】作用：给类的全限定名称 取一个短名称   com.heima.mybatis.pojo.User==&gt;User</span></span><br><span class="line"><span class="comment">            【2】用法：</span></span><br><span class="line"><span class="comment">                1、单独取别名：&lt;typeAlias type=&quot;com.heima.mybatis.pojo.User&quot; alias=&quot;User&quot;/&gt;       </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            type 关联的类的全名</span></span><br><span class="line"><span class="comment">            alias：属于别名，随便定义，但是这里定义什么那么在映射文件UserMapper.xml中就使用什么</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.sh.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用别名：</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1573114945923.png" class title="This is an image"><h4 id="【内置别名】">【内置别名】</h4><p>这是一些为常见的 Java 类型内建的相应的类型别名。它们都是不区分大小写的，注意对基本类型名称重复采取的特殊命名风格。</p><p>此处省略。。。。。。</p><h4 id="【代码演示】">【代码演示】</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--parameterType=&quot;int&quot; 表示sql语句参数id的类型，int是Integer的别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="typeHandlers-类型处理器">typeHandlers(类型处理器)</h2><p>无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。下表描述了一些默认的类型处理器。</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1564454364699.png" class title="This is an image"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        四、typeHandlers（类型处理器）</span></span><br><span class="line"><span class="comment">            数据库数据类型：varchar    ===StringTypeHandler===&gt; 实体类：String</span></span><br><span class="line"><span class="comment">            数据库数据类型：double   DoubleTypeHandler  实体类中的数据： java.lang.Double </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h1>environments</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MyBatis 可以配置成适应多种环境，例如，开发、测试和生产环境需要有不同的配置；</span><br><span class="line">尽管可以配置多个环境，每个 SqlSessionFactory 实例只能选择其一。</span><br><span class="line">虽然，这种方式也可以做到很方便的分离多个环境，但是实际使用场景下，我们更多的是选择使用spring来管理数据源，来做到环境的分离。</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">父标签： environments（环境配置）</span><br><span class="line">子标签：</span><br><span class="line">               environment（环境变量）</span><br><span class="line">               transactionManager（事务管理器）</span><br><span class="line">               dataSource（数据源） </span><br></pre></td></tr></table></figure><h3 id="【1】默认环境设置">【1】默认环境设置</h3><p>第一步：在environments标签中配置多个environment，通过属性default指定一个默认环境配置；</p><p>第二步：在构建SqlSessionFactory时，可指定具体环境，如果不指定就使用默认的环境配置；</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1564455076644.png" class title="This is an image"><h3 id="【2】指定环境设置">【2】指定环境设置</h3><p>第一步：在environments中配置多个环境</p><p>第二步：在构建SqlSessionFactory时，通过environment的id指定环境</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1564455250663.png" class title="This is an image"><p>代码演示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis环境的配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        五、 environments（数据库环境配置）</span></span><br><span class="line"><span class="comment">                开发过程中会使用第三方的连接池：druid,C3P0</span></span><br><span class="line"><span class="comment">                Spring框架管理连接池</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;environments default=&quot;test&quot;&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通常我们只需要配置一个就可以了， id是环境的名字 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器：由JDBC来管理--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源的配置：mybatis自带的连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    这里的value=&quot;$&#123;driver&#125;&quot;  driver 是子标签property的name属性值</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/db4&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--通常我们只需要配置一个就可以了， id是环境的名字 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器：由JDBC来管理--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源的配置：mybatis自带的连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                    这里的value=&quot;$&#123;driver&#125;&quot;  driver 是子标签property的name属性值</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/db4&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;12345&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryById</span><span class="params">( )</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取mapper接口的动态代理实现</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1、从xml中构建SqlSessionFactory</span></span><br><span class="line">        String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        <span class="comment">//这里指定了环境为test</span></span><br><span class="line"><span class="comment">//        SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream,&quot;test&quot;);</span></span><br><span class="line">        <span class="comment">//build不方法不指定环境就使用默认的 &lt;environments default=&quot;development&quot;&gt;</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、获取SqlSession</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3、获取UserMapper接口的动态代理对象</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">        User user = userMapper.queryById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;user = &quot;</span> + user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>【注意事项】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">虽然，这种方式也可以做到很方便的分离多个环境，但是实际使用场景下，我们更多的是选择使用第三方的连接池：druid,C3P0。并且使用spring来管理数据源(连接池)，来做到环境的分离。 </span><br></pre></td></tr></table></figure><h2 id="mappers-映射器">mappers(映射器)</h2><p>mappers（映射器）：UserMapper.xml====&gt;UserMapper.java接口 关联.</p><p>作用：维护接口和映射文件之间的关系</p><p>.既然 MyBatis 的行为已经由上述元素配置完了，我们现在就要定义 SQL 映射语句了。 但是首先我们需要告诉 MyBatis 到哪里去找到这些语句。 Java 在自动查找这方面没有提供一个很好的方法，所以最佳的方式是告诉MyBatis 到哪里去找映射文件。 你可以使用相对于类路径的资源引用， 或完全限定资源定位符（包括 <code>file:///</code> 的 URL），或类名和包名等。方式如下：</p><p>使用方式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、加载映射文件，关联UserMapper.java接口</span><br><span class="line">                   【1】<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;UserMapper.xml&quot;</span>/&gt;</span> 从src下加载映射文件；</span><br><span class="line">                   【2】<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;&quot;</span>/&gt;</span>  从本地磁盘中加载映射文件,但是需要添加`file:///`协议</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2、加载接口，关联映射文件</span><br><span class="line"></span><br><span class="line"> 条件：1、接口名和映射文件名保持一致；2、路径保持一致；</span><br><span class="line">【1】class：加载单独的接口：<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.heima.mybatis.dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">【2】批量加载class：<span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.heima.mybatis.dao&quot;</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方式一：加载映射文件方式resource">方式一：加载映射文件方式resource</h3><p>在mybatis-config.xml文件中，通过mapper标签的resource属性引入当前工程src下的映射文件。</p><p>【缺点】有多少个映射文件就要配置多少次，麻烦。</p><h3 id="方式二：加载映射文件方式url">方式二：加载映射文件方式url</h3><p>将UserMapper.xml映射文件放入e盘下，然后在全局配置文件中引入该映射文件。<br>引入硬盘目录下的映射文件：</p><img src= "/img/loading.gif" data-src="/posts/6331d382/1564456073984.png" class title="This is an image"><p>缺点：<br>1、硬盘的位置可能随着项目的部署或迁移，路径发生变化<br>2、每新增一个映射文件，就要在全局配置文件中引入</p><h3 id="方式三：加载接口，关联映射文件方式class">方式三：加载接口，关联映射文件方式class</h3><p>条件：<strong>1、接口名和映射文件名保持一致；2、路径保持一致；</strong></p><p>在mybatis-config.xml配置mapper接口的全路径：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;mapper resource=&quot;UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.heima.mybatis.mapper.UserMapper&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在与UserMapper.java相同目录结构的包下面新建映射文件UserMapper.xml，内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.heima.mybatis.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--根据id查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select *,user_name AS  userName from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方式四：加载接口，关联映射文件方式package">方式四：加载接口，关联映射文件方式package</h2><p>在mybatis-config.xml中，开启包扫描：扫描包下的所有接口和对应的映射文件。</p><p>条件：<strong>1、接口名和映射文件名保持一致；2、路径保持一致；</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.sh.dao&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>**【原理】：**扫描目标包目录下的mapper接口，并按照class的方式找到接口对应的映射文件。</p><p>其条件和设置class的条件一样：</p><p>1、映射文件和mapper接口在同一个目录下<br>2、文件名必须一致<br>3、映射文件的namespace必须和mapper接口的全路径保持一致</p><p><strong>【缺点】：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、需要遵守的条件太多</span><br><span class="line">2、mapper.xml和mapper.java没有分离。</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mappers:配置映射文件</span><br><span class="line">mapper</span><br><span class="line">resource:配置类路径下的映射文件(掌握)</span><br><span class="line">url：配置磁盘位置的映射文件</span><br><span class="line">class:配置接口</span><br><span class="line">            1、要求接口和映射文件在同一个包下</span><br><span class="line">            2、要求接口和映射文件同名</span><br><span class="line">            3、要求namesapce的值必须为接口的全限定类名</span><br><span class="line">   package：配置接口包扫描(掌握)</span><br><span class="line">            1、要求接口和映射文件在同一个包下</span><br><span class="line">            2、要求接口和映射文件同名</span><br><span class="line">            3、要求namesapce的值必须为接口的全限定类名</span><br><span class="line"></span><br><span class="line">【推荐使用】resource加载映射文件，如果使用注解开发只能使用class  和 package方式，建议使用package方式，注解开发不能使用加载配置文件的方式，因为注解已经取代了xml文件。所有注解都使用在接口的方法上。</span><br></pre></td></tr></table></figure><h2 id="全局配置小结">全局配置小结</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>image</title>
    <link href="http://aiqiong.github.io/posts/c53d045f/"/>
    <id>http://aiqiong.github.io/posts/c53d045f/</id>
    <published>2020-08-01T06:56:31.000Z</published>
    <updated>2020-08-01T06:59:26.958Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src= "/img/loading.gif" data-src="/posts/c53d045f/%E5%93%88%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84.jpg" class title="This is an test image"><img src= "/img/loading.gif" data-src="/posts/c53d045f/1.jpg" class title="This is an test image"><img src= "/img/loading.gif" data-src="/posts/c53d045f/2.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
